testRes = cor.mtest(y, conf.level = 0.95)
corrplot.mixed(y, p.mat = testRes$p, sig.level = 0.10)
corrplot.mixed(y, p.mat = testRes$p, sig.level = 0.05)
# Create the plots
pairs(x[,2], x[,9])
# Create the plots
pair(x[,2], x[,9])
# Create the plots
par(x[,2], x[,9])
# Create the plots
par(x[,2], x[,9])
y <- cor(x, method = "spearman", use = "pairwise.complete.obs")
testRes = cor.mtest(y, conf.level = 0.95)
corrplot.mixed(y, p.mat = testRes$p, sig.level = 0.05)
x <- read.csv("Meishan_selected_data_summary_v2.csv")
x$series<- NULL
x$stage <- NULL
x$bed <- NULL
x$cumulative <- NULL
x$system <- NULL
x$thickness  <- NULL
x$X  <- NULL
x$metres  <- NULL
x <- x[23:46,]
y <- cor(x, method = "pearson", use = "pairwise.complete.obs")
library("corrplot")
testRes = cor.mtest(y, conf.level = 0.95)
corrplot.mixed(y, p.mat = testRes$p, sig.level = 0.05)
Ccarb - Lithium/oxygen/cadmium
x <- read.csv("imputed_geochem_data.csv")
x$series<- NULL
x$stage <- NULL
x$bed <- NULL
x$cumulative <- NULL
x$system <- NULL
x$thickness  <- NULL
x$X  <- NULL
x$metres  <- NULL
x <- x[23:46,]
y <- cor(x, method = "pearson", use = "pairwise.complete.obs")
library("corrplot")
testRes = cor.mtest(y, conf.level = 0.95)
corrplot.mixed(y, p.mat = testRes$p, sig.level = 0.05)
View(x)
x <- read.csv("imputed_geochem_data.csv")
x$series<- NULL
x$stage <- NULL
x$bed <- NULL
x$cumulative <- NULL
x$system <- NULL
x$thickness  <- NULL
x$X  <- NULL
x$metres  <- NULL
y <- cor(x, method = "pearson", use = "pairwise.complete.obs")
library("corrplot")
testRes = cor.mtest(y, conf.level = 0.95)
corrplot.mixed(y, p.mat = testRes$p, sig.level = 0.05)
getwd()
x <- read.csv("Meishan_selected_data_summary_v2.csv")
x$series<- NULL
x$stage <- NULL
x$bed <- NULL
x$cumulative <- NULL
x$system <- NULL
x$thickness  <- NULL
x$X  <- NULL
x$metres  <- NULL
x <- x[23:46,]
y <- cor(x, method = "pearson", use = "pairwise.complete.obs")
library("corrplot")
testRes = cor.mtest(y, conf.level = 0.95)
corrplot.mixed(y, p.mat = testRes$p, sig.level = 0.05)
Ccarb - Lithium/oxygen/cadmium
Corg - oxygen
redoxI  - lithium
sulphur - osmium
oxygen - cadmium
setwd("C:/Users/u259167/Documents/ITDR/Research/DFG Emmy Noether/Meishan/Geochem/Data_R")
setwd("C:/Users/u259167/Documents/ITDR/Research/DFG Emmy Noether/Meishan/Geochem/Data/Data_R")
bed <- read.csv("stages_Meishan.csv")
bed <- read.csv("stages_Meishan.csv")
View(bed)
bed <- read.csv("Meishan_thicknesses.csv")
bed <- read.csv("thicknesses_Meishan.csv")
View(bed)
env <- read.csv("Fe_sp.csv")
View(env)
env <- subset(env, select = c("n_height","XFeHr"))
env$Bed <- 0
for (i in 1: nrow(env)){
height <- env[i,"n_height"]
for (j in 1: nrow(bed)){
bas <- bed[j, "Sbottom"]
top <- bed[j, "Stop"]
if (height >= bas && height <= top){
env[i, "Bed"] <- bed[j, "bed"]
}
}
}
env_agg <- aggregate(env, by=list(env$Bed), FUN=mean)
View(env_agg)
XFe_agg <- env_agg[order(env_agg$n_height),]
XFe_agg$n_height <- NULL
XFe_agg$Bed <- NULL
View(XFe_agg)
#"Fe_sp.csv"
env <- read.csv("C_carb_13.csv")
View(env)
#Xccarb
env <- subset(env, select = c("n_height","Xccarb"))
env$Bed <- 0
for (i in 1: nrow(env)){
height <- env[i,"n_height"]
for (j in 1: nrow(bed)){
bas <- bed[j, "Sbottom"]
top <- bed[j, "Stop"]
if (height >= bas && height <= top){
env[i, "Bed"] <- bed[j, "bed"]
}
}
}
env_agg <- aggregate(env, by=list(env$Bed), FUN=mean)
XC_agg <- env_agg[order(env_agg$n_height),]
XC_agg$n_height <- NULL
XC_agg$Bed <- NULL
View(XC_agg)
#"Fe_sp.csv"  "C_carb_13.csv"
env <- read.csv("C_org_13.csv")
View(env)
View(env)
#Xccarb
env <- subset(env, select = c("n_height","XCorg"))
env$Bed <- 0
for (i in 1: nrow(env)){
height <- env[i,"n_height"]
for (j in 1: nrow(bed)){
bas <- bed[j, "Sbottom"]
top <- bed[j, "Stop"]
if (height >= bas && height <= top){
env[i, "Bed"] <- bed[j, "bed"]
}
}
}
env_agg <- aggregate(env, by=list(env$Bed), FUN=mean)
XCo_agg <- env_agg[order(env_agg$n_height),]
XCo_agg$n_height <- NULL
XCo_agg$Bed <- NULL
View(XCo_agg)
#"Fe_sp.csv"  "C_carb_13.csv"   "C_org_13.csv"
env <- read.csv("Ca_44.csv")
View(env)
#Xccarb
env <- subset(env, select = c("n_height","XCa"))
env$Bed <- 0
for (i in 1: nrow(env)){
height <- env[i,"n_height"]
for (j in 1: nrow(bed)){
bas <- bed[j, "Sbottom"]
top <- bed[j, "Stop"]
if (height >= bas && height <= top){
env[i, "Bed"] <- bed[j, "bed"]
}
}
}
env_agg <- aggregate(env, by=list(env$Bed), FUN=mean)
XCa_agg <- env_agg[order(env_agg$n_height),]
XCa_agg$n_height <- NULL
XCa_agg$Bed <- NULL
#"Fe_sp.csv"  "C_carb_13.csv"   "C_org_13.csv"  "Ca_44.csv"
env <- read.csv("Cd_114.csv")
#Xccarb
env <- subset(env, select = c("n_height","XCd"))
env$Bed <- 0
for (i in 1: nrow(env)){
height <- env[i,"n_height"]
for (j in 1: nrow(bed)){
bas <- bed[j, "Sbottom"]
top <- bed[j, "Stop"]
if (height >= bas && height <= top){
env[i, "Bed"] <- bed[j, "bed"]
}
}
}
env_agg <- aggregate(env, by=list(env$Bed), FUN=mean)
XCd_agg <- env_agg[order(env_agg$n_height),]
XCd_agg$n_height <- NULL
XCd_agg$Bed <- NULL
#"Fe_sp.csv"  "C_carb_13.csv"   "C_org_13.csv"  "Ca_44.csv" "Cd_114.csv"
env <- read.csv("Hg_TOC.csv")
View(env)
env <- subset(env, select = c("n_height","XHg"))
env$Bed <- 0
for (i in 1: nrow(env)){
height <- env[i,"n_height"]
for (j in 1: nrow(bed)){
bas <- bed[j, "Sbottom"]
top <- bed[j, "Stop"]
if (height >= bas && height <= top){
env[i, "Bed"] <- bed[j, "bed"]
}
}
}
env_agg <- aggregate(env, by=list(env$Bed), FUN=mean)
env_agg <- aggregate(env, by=list(env$Bed), FUN=mean)
XHg_agg <- env_agg[order(env_agg$n_height),]
XHg_agg$n_height <- NULL
XHg_agg$Bed <- NULL
#"Fe_sp.csv"  "C_carb_13.csv"   "C_org_13.csv"  "Ca_44.csv" "Cd_114.csv"  "Hg_TOC.csv"
env <- read.csv("Li_7.csv")
env <- subset(env, select = c("n_height","XLi"))
env$Bed <- 0
for (i in 1: nrow(env)){
height <- env[i,"n_height"]
for (j in 1: nrow(bed)){
bas <- bed[j, "Sbottom"]
top <- bed[j, "Stop"]
if (height >= bas && height <= top){
env[i, "Bed"] <- bed[j, "bed"]
}
}
}
env_agg <- aggregate(env, by=list(env$Bed), FUN=mean)
XLi_agg <- env_agg[order(env_agg$n_height),]
XLi_agg$n_height <- NULL
XLi_agg$Bed <- NULL
#"Fe_sp.csv"  "C_carb_13.csv"   "C_org_13.csv"  "Ca_44.csv" "Cd_114.csv"  "Hg_TOC.csv"
env <- read.csv("N_15.csv")
env <- subset(env, select = c("n_height","XN"))
env$Bed <- 0
for (i in 1: nrow(env)){
height <- env[i,"n_height"]
for (j in 1: nrow(bed)){
bas <- bed[j, "Sbottom"]
top <- bed[j, "Stop"]
if (height >= bas && height <= top){
env[i, "Bed"] <- bed[j, "bed"]
}
}
}
env_agg <- aggregate(env, by=list(env$Bed), FUN=mean)
XN_agg <- env_agg[order(env_agg$n_height),]
XN_agg$n_height <- NULL
XN_agg$Bed <- NULL
#"Fe_sp.csv"  "C_carb_13.csv"   "C_org_13.csv"  "Ca_44.csv" "Cd_114.csv"  "Hg_TOC.csv"  "N_15.csv"
env <- read.csv("O_18.csv")
env <- subset(env, select = c("n_height","XO"))
env$Bed <- 0
for (i in 1: nrow(env)){
height <- env[i,"n_height"]
for (j in 1: nrow(bed)){
bas <- bed[j, "Sbottom"]
top <- bed[j, "Stop"]
if (height >= bas && height <= top){
env[i, "Bed"] <- bed[j, "bed"]
}
}
}
env_agg <- aggregate(env, by=list(env$Bed), FUN=mean)
XO_agg <- env_agg[order(env_agg$n_height),]
XO_agg$n_height <- NULL
XO_agg$Bed <- NULL
#"Fe_sp.csv"  "C_carb_13.csv"   "C_org_13.csv"  "Ca_44.csv" "Cd_114.csv"  "Hg_TOC.csv"  "N_15.csv"
#"O_18.csv"
env <- read.csv("Os_187.csv")
env <- subset(env, select = c("n_height","XOs"))
env$Bed <- 0
for (i in 1: nrow(env)){
height <- env[i,"n_height"]
for (j in 1: nrow(bed)){
bas <- bed[j, "Sbottom"]
top <- bed[j, "Stop"]
if (height >= bas && height <= top){
env[i, "Bed"] <- bed[j, "bed"]
}
}
}
env_agg <- aggregate(env, by=list(env$Bed), FUN=mean)
XOs_agg <- env_agg[order(env_agg$n_height),]
XOs_agg$n_height <- NULL
XOs_agg$Bed <- NULL
#"Fe_sp.csv"  "C_carb_13.csv"   "C_org_13.csv"  "Ca_44.csv" "Cd_114.csv"  "Hg_TOC.csv"  "N_15.csv"
#"O_18.csv"
env <- read.csv("S_34.csv")
View(env)
env <- subset(env, select = c("n_height","XS"))
env$Bed <- 0
for (i in 1: nrow(env)){
height <- env[i,"n_height"]
for (j in 1: nrow(bed)){
bas <- bed[j, "Sbottom"]
top <- bed[j, "Stop"]
if (height >= bas && height <= top){
env[i, "Bed"] <- bed[j, "bed"]
}
}
}
env_agg <- aggregate(env, by=list(env$Bed), FUN=mean)
env_agg <- aggregate(env, by=list(env$Bed), FUN=mean)
XS_agg <- env_agg[order(env_agg$n_height),]
XS_agg$n_height <- NULL
XS_agg$Bed <- NULL
#"Fe_sp.csv"  "C_carb_13.csv"   "C_org_13.csv"  "Ca_44.csv" "Cd_114.csv"  "Hg_TOC.csv"  "N_15.csv"
#"O_18.csv"
env <- read.csv("Sr_87.csv")
env <- subset(env, select = c("n_height","XSr"))
env$Bed <- 0
for (i in 1: nrow(env)){
height <- env[i,"n_height"]
for (j in 1: nrow(bed)){
bas <- bed[j, "Sbottom"]
top <- bed[j, "Stop"]
if (height >= bas && height <= top){
env[i, "Bed"] <- bed[j, "bed"]
}
}
}
env_agg <- aggregate(env, by=list(env$Bed), FUN=mean)
XSr_agg <- env_agg[order(env_agg$n_height),]
XSr_agg$n_height <- NULL
XSr_agg$Bed <- NULL
#"Fe_sp.csv"  "C_carb_13.csv"   "C_org_13.csv"  "Ca_44.csv" "Cd_114.csv"  "Hg_TOC.csv"  "N_15.csv"
#"O_18.csv"
env <- read.csv("TOC.csv")
env <- subset(env, select = c("n_height","XTOC"))
env$Bed <- 0
for (i in 1: nrow(env)){
height <- env[i,"n_height"]
for (j in 1: nrow(bed)){
bas <- bed[j, "Sbottom"]
top <- bed[j, "Stop"]
if (height >= bas && height <= top){
env[i, "Bed"] <- bed[j, "bed"]
}
}
}
env_agg <- aggregate(env, by=list(env$Bed), FUN=mean)
XTOC_agg <- env_agg[order(env_agg$n_height),]
XTOC_agg$n_height <- NULL
XTOC_agg$Bed <- NULL
View(XTOC_agg)
total <- merge(XC_agg,XCo_agg,by="Group.1",all=T)
total <- merge(total,XO_agg,by="Group.1",all=T)
total <- merge(total,XSr_agg,by="Group.1",all=T)
total <- merge(total,XN_agg,by="Group.1",all=T)
total <- merge(total,XTOC_agg,by="Group.1",all=T)
View(total)
names(total)[names(total) == "Group.1"] <- "bed"
total <- merge(total, bed,by="bed",all=T)
total <- total[order(total$Smid),]
rownames(total) <- total$bed
View(total)
write.csv(total, "proxies_long.csv")
Total <- NULL
View(total)
total <- merge(total,XOs_agg,by="Group.1",all=T)
total <- merge(total,XFe_agg,by="Group.1",all=T)
total <- merge(total,XCd_agg,by="Group.1",all=T)
total <- merge(total,XS_agg,by="Group.1",all=T)
total <- merge(total,XLi_agg,by="Group.1",all=T)
total <- merge(total,XCa_agg,by="Group.1",all=T)
total <- merge(total,XHg_agg,by="Group.1",all=T)
Total <- merge(XC_agg,XCo_agg,by="Group.1",all=T)
View(total)
Total <- merge(Total,XO_agg,by="Group.1",all=T)
Total <- merge(Total,XSr_agg,by="Group.1",all=T)
Total <- merge(Total,XN_agg,by="Group.1",all=T)
Total <- merge(Total,XTOC_agg,by="Group.1",all=T)
Total <- merge(Total,XOs_agg,by="Group.1",all=T)
Total <- merge(Total,XFe_agg,by="Group.1",all=T)
Total <- merge(Total,XCd_agg,by="Group.1",all=T)
Total <- merge(Total,XS_agg,by="Group.1",all=T)
Total <- merge(Total,XLi_agg,by="Group.1",all=T)
Total <- merge(Total,XCa_agg,by="Group.1",all=T)
Total <- merge(Total,XHg_agg,by="Group.1",all=T)
View(Total)
names(Total)[names(Total) == "Group.1"] <- "bed"
Total <- merge(Total, bed,by="bed",all=T)
Total <- Total[order(Total$Smid),]
rownames(Total) <- Total$bed
View(Total)
write.csv(total, "proxies_short.csv")
getwd()
library(ggplot2)
library("segmented")
env <- read.csv("O_18.csv")
#subselect the useful columns
env_1 <- subset(env, select = c("n_height","XO"))
env_1 <- env_1[env_1$n_height >-4390,]
env_1 <- env_1[env_1$n_height <773,]
#determine the number of breakpoints following https://rdrr.io/cran/segmented/man/selgmented.html
out.lm<-lm(XO~n_height,data=env_1)
os <-selgmented(out.lm, Kmax=10, type="bic") #BIC-based selection
#Do the breakpoint analysis
fit <- lm(XO ~ n_height, data=env_1)
segmented.fit <- segmented(fit, seg.Z = ~n_height, psi=c(-3970, -842, -19, -3))
summary(segmented.fit)
fit <- numeric(length(env_1$n_height)) * NA
fit[complete.cases(rowSums(cbind(env_1$XO, env_1$n_height)))] <- broken.line(segmented.fit)$fit
data1 <- data.frame(n_height = env_1$n_height, XO = env_1$XO, fit = fit)
#plot the results
p4<- ggplot(data=env_1, aes(x=n_height, y=XO, group=1)) +
geom_line(colour="#FF0000", linetype="dashed", size=.5) +
geom_point(colour="#FF0000", size=2, shape=21, fill="#FFFFFF") +
geom_line(aes(x = n_height, y = fit), size = .75, color = "#CC0000") +
xlab("") + ylab("δ18Oapatite (‰, VSMOW)") +
scale_x_reverse(limits = c(773,  -4390)) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x=element_blank(), axis.text.y = element_text(angle = 90))
p4
#plot the results
p4<- ggplot(data=env_1, aes(x=n_height, y=XO, group=1)) +
geom_line(colour="#FF0000", linetype="dashed", size=.5) +
geom_point(colour="#FF0000", size=2, shape=21, fill="#FFFFFF") +
geom_line(aes(x = n_height, y = fit), size = .75, color = "#CC0000") +
xlab("") + ylab("δ18Oapatite (‰, VSMOW)") +
scale_x_reverse(limits = c(167,  -560)) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x=element_blank(), axis.text.y = element_text(angle = 90))
p4
ggsave("FIG_O_isotope.eps", plot = p4, device = "eps",
path = NULL, width = 12.6, height = 4, units = c("cm"),
dpi = 1000)
env <- read.csv("C_carb_13.csv")
env_1 <- subset(env, select = c("n_height","Xccarb"))
env_1 <- env_1[env_1$n_height >-4390,]
env_1 <- env_1[env_1$n_height <773,]
out.lm<-lm(Xccarb~n_height,data=env_1)
os <-selgmented(out.lm, Kmax=10, type="bic") #BIC-based selection
fit <- lm(Xccarb ~ n_height, data=env_1)
segmented.fit <- segmented(fit, seg.Z = ~n_height, psi=c(-3000, -2500, -2000, -1500, -1000, 0))
summary(segmented.fit)
fit <- numeric(length(env_1$n_height)) * NA
fit[complete.cases(rowSums(cbind(env_1$XCcarb, env_1$n_height)))] <- broken.line(segmented.fit)$fit
data1 <- data.frame(n_height = env_1$n_height, XCcarb = env_1$Xccarb, fit = fit)
p1<- ggplot(data=env_1, aes(x=n_height, y=Xccarb, group=1)) +
geom_line(colour="#339900", linetype="dashed", size=.5) +
geom_point(colour="#339900", size=2, shape=21, fill="#FFFFFF") +
geom_line(aes(x = n_height, y = fit), size = .75, color = "#336600") +
xlab("") + ylab("δ13Ccarb (‰, VPDB)") +
scale_x_reverse(limits = c(167,  -560)) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x=element_blank(), axis.text.y = element_text(angle = 90))
p1
ggsave("FIG_Ccarb_isotope.eps", plot = p1, device = "eps",
path = NULL, width = 12.6, height = 4, units = c("cm"),
dpi = 1000)
env <- read.csv("Cd_114.csv")
env_1 <- subset(env, select = c("n_height","XCd"))
env_1 <- env_1[env_1$n_height >-4390,]
env_1 <- env_1[env_1$n_height <773,]
out.lm<-lm(XCd~n_height,data=env_1)
os <-selgmented(out.lm, Kmax=5, type="bic") #BIC-based selection
fit <- lm(XCd ~ n_height, data=env_1)
segmented.fit <- segmented(fit, seg.Z = ~n_height, psi=c(-23, 4))
summary(segmented.fit)
fit <- numeric(length(env_1$n_height)) * NA
fit[complete.cases(rowSums(cbind(env_1$XCd, env_1$n_height)))] <- broken.line(segmented.fit)$fit
data1 <- data.frame(n_height = env_1$n_height, XCd = env_1$XCd, fit = fit)
p8<- ggplot(data=env_1, aes(x=n_height, y=XCd, group=1)) +
geom_line(colour="#CCCCCC", linetype="dashed", size=.5) +
geom_point(colour="#CCCCCC", size=2, shape=21, fill="white") +
geom_line(aes(x = n_height, y = fit), size = .75, color = "#999999") +
xlab("") + ylab("δ114/110Cd (‰)") +
scale_x_reverse(limits = c(167,  -560)) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x=element_blank(), axis.text.y = element_text(angle = 90))
p8
ggsave("FIG_Cd_isotope.eps", plot = p8, device = "eps",
path = NULL, width = 12.6, height = 4, units = c("cm"),
dpi = 1000)
env <- read.csv("S_34.csv")
env_1 <- subset(env, select = c("n_height","XS"))
env_1 <- env_1[env_1$n_height >-4390,]
env_1 <- env_1[env_1$n_height <773,]
p10<- ggplot(data=env_1, aes(x=n_height, y=XS, group=1)) +
geom_line(colour="#FF9900", linetype="dashed", size=.5) +
geom_point(colour="#FF9900", size=2, shape=21, fill="white") +
xlab("") + ylab("δ34S (‰)") +
scale_x_reverse(limits = c(773,  -560)) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x=element_blank(), axis.text.y = element_text(angle = 90))
p10<- ggplot(data=env_1, aes(x=n_height, y=XS, group=1)) +
geom_line(colour="#FF9900", linetype="dashed", size=.5) +
geom_point(colour="#FF9900", size=2, shape=21, fill="white") +
xlab("") + ylab("δ34S (‰)") +
scale_x_reverse(limits = c(167,  -560)) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x=element_blank(), axis.text.y = element_text(angle = 90))
p10
ggsave("FIG_S_isotope.eps", plot = p10, device = "eps",
path = NULL, width = 12.6, height = 4, units = c("cm"),
dpi = 1000)
env <- read.csv("Fe_sp.csv")
env_1 <- subset(env, select = c("n_height","XFeHr"))
env_1 <- env_1[env_1$n_height >-4390,]
env_1 <- env_1[env_1$n_height <773,]
out.lm<-lm(XFeHr~n_height,data=env_1)
os <-selgmented(out.lm, Kmax=5, type="bic") #BIC-based selection
fit <- lm(XFeHr ~ n_height, data=env_1)
segmented.fit <- segmented(fit, seg.Z = ~n_height, psi=c(-103, 124))
summary(segmented.fit)
fit <- numeric(length(env_1$n_height)) * NA
fit[complete.cases(rowSums(cbind(env_1$XLi, env_1$n_height)))] <- broken.line(segmented.fit)$fit
p13<- ggplot(data=env_1, aes(x=n_height, y=XFeHr, group=1)) +
geom_line(colour="#993300", linetype="dashed", size=.5) +
geom_point(colour="#993300", size=2, shape=21, fill="white") +
geom_line(aes(x = n_height, y = fit), size = .75, color = "brown") +
xlab("") + ylab("FeHR/FeT") +
scale_x_reverse(limits = c(167,  -560)) +
theme_bw() +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x=element_blank(), axis.text.y = element_text(angle = 90))
p13
