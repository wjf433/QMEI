env_agg <- aggregate(env, by=list(env$Bed), FUN=mean)
env_agg <- env_agg[order(env_agg$n_height),] #order the dataframe occording to bed height
env_agg$n_height <- NULL
env_agg$Bed <- NULL
total <- merge(total,env_agg,by="Group.1",all=T)
}
use warnings()
use warnings
warnings()
#Read in the geochemical and stratigraphic data
bed <- read.csv("stages_Meishan.csv")
# This creates a list of each raw data file
proxies <- c("Data_R/TOC.csv","Data_R/Th_U.csv", "Data_R/Zn_66.csv", "Data_R/S_33_34.csv", "Data_R/S_33_34.csv","Data_R/Ce_anom.csv", "Data_R/Sr_87.csv",
"Data_R/Os_187.csv", "Data_R/O_18.csv", "Data_R/N_15.csv", "Data_R/Li_7.csv", "Data_R/Hg_TOC.csv", "Data_R/Fe_sp.csv", "Data_R/Fe_sp.csv",
"Data_R/Cd_114.csv", "Data_R/Ca_44.csv", "Data_R/C_org_13.csv", "Data_R/C_carb_13.csv")
# This creates the name of the column of interest
pnam <- c("XTOC","XThU", "XZn", "XS33", "XS34", "OCe", "XSr",
"XOs", "XO", "XN", "XLi", "XHg", "XFeHr", "XFePy",
"XCd", "XCa", "XCorg", "Xccarb")
# create a dataframe to save a value for each bed in the section
total <- data.frame("Group.1" = c("1","1u","2","3","4a","4b","5","6","8","9","10","11","12","13a","13b","14","15","16","18","19",
"20","21","22","23a","23b","24b","24c","24d","24e","25","26","27a","27b","27c","27d","28","29a","29b","30","32",
"34","35","36","37","40","41","42","44","45","46","49","0"))
for (i in 1: length(proxies)){
env <- read.csv(proxies[[i]])
env <- subset(env, select = c("n_height",pnam[[i]])) # subselect the useful columns
#Now add the bed numbers to the dataframe
env$Bed <- 0
for (i in 1: nrow(env)){
height <- env[i,"n_height"]
for (j in 1: nrow(bed)){
bas <- bed[j, "Sbottom"]
top <- bed[j, "Stop"]
if (height >= bas && height <= top){
env[i, "Bed"] <- bed[j, "bed"]
}
}
}
# this averages the values for each bed
env_agg <- aggregate(env, by=list(env$Bed), FUN=mean)
env_agg <- env_agg[order(env_agg$n_height),] #order the dataframe occording to bed height
env_agg$n_height <- NULL
env_agg$Bed <- NULL
total <- merge(total,env_agg,by="Group.1",all=T)
}
View(total)
#this merges all the dataframes for each proxy into one dataframe
names(total)[names(total) == "Group.1"] <- "bed"
View(total)
total <- merge(total, bed,by="bed",all=T)
View(total)
total <- total[order(total$Smid),]
View(total)
rownames(total) <- total$bed #change the rownames
View(total)
# Now we have a dataframe with the average values for each bed and NAs where there ar eno values for that bed
# save the dataframe
write.csv(total, "proxies_averages.csv")
View(total)
data <- total[,1:19]
View(data)
View(total)
View(total)
total %>%
arrange(fct_relevel(bed, '0', '1'))
total %>%
arrange(fct_relevel(bed, '0', '1'))
# -------------------------------------------------------------------------- #
#
# Imputation using 2 point interpolation
#
# -------------------------------------------------------------------------- #
# This code requires the functions within the dplyr and zoo packages
library(dplyr)
library(zoo)
total %>%
arrange(fct_relevel(bed, '0', '1'))
data %>%
arrange(fct_relevel(bed, '0', '1'))
library(forcats)
install.packages("forcats")
library(forcats)
data %>%
arrange(fct_relevel(bed, '0', '1'))
data <- data %>%
arrange(fct_relevel(bed, '0', '1'))
View(data)
View(total)
View(total)
data <- total[,1:19]
data <- data %>%
arrange(fct_relevel(bed, "0","1","1u","2","3","4a","4b","5","6","8","9","10","11","12","13a","13b","14","15","16","18","19",
"20","21","22","23a","23b","24b","24c","24d","24e","25","26","27a","27b","27c","27d","28","29a","29b","30","32",
"34","35","36","37","40","41","42","44","45","46","49", "50+"))
View(data)
data <- total[,1:19]
data <- data %>%
arrange(fct_relevel(bed, "0","1","1u","2","3","4a","4b","5","6","7","8","9","10","11","12","13a","13b","14","15","16","17","18","19",
"20","21","22","23a","23b","24a","24b","24c","24d","24e","25","26","27a","27b","27c","27d","28","29a","29b","30","31","32",
"33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50+"))
View(data)
bed <- read.csv("stages_Meishan.csv")
# This creates a list of each raw data file
proxies <- c("Data_R/TOC.csv","Data_R/Th_U.csv", "Data_R/Zn_66.csv", "Data_R/S_33_34.csv", "Data_R/S_33_34.csv","Data_R/Ce_anom.csv", "Data_R/Sr_87.csv",
"Data_R/Os_187.csv", "Data_R/O_18.csv", "Data_R/N_15.csv", "Data_R/Li_7.csv", "Data_R/Hg_TOC.csv", "Data_R/Fe_sp.csv", "Data_R/Fe_sp.csv",
"Data_R/Cd_114.csv", "Data_R/Ca_44.csv", "Data_R/C_org_13.csv", "Data_R/C_carb_13.csv")
# This creates the name of the column of interest for each proxy
pnam <- c("XTOC","XThU", "XZn", "XS33", "XS34", "OCe", "XSr",
"XOs", "XO", "XN", "XLi", "XHg", "XFeHr", "XFePy",
"XCd", "XCa", "XCorg", "Xccarb")
# create a dataframe to save a value for each bed in the section
total <- data.frame("Group.1" = c("0","1","1u","2","3","4a","4b","5","6","7","8","9","10","11","12","13a","13b","14","15","16","17","18","19",
"20","21","22","23a","23b","24a","24b","24c","24d","24e","25","26","27a","27b","27c","27d","28","29a","29b","30","31","32",
"33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50+"))
for (i in 1: length(proxies)){
env <- read.csv(proxies[[i]])
env <- subset(env, select = c("n_height",pnam[[i]])) # subselect the useful columns
#Now add the bed numbers to the dataframe
env$Bed <- 0
for (i in 1: nrow(env)){
height <- env[i,"n_height"]
for (j in 1: nrow(bed)){
bas <- bed[j, "Sbottom"]
top <- bed[j, "Stop"]
if (height >= bas && height <= top){
env[i, "Bed"] <- bed[j, "bed"]
}
}
}
# this averages the values for each bed
env_agg <- aggregate(env, by=list(env$Bed), FUN=mean)
env_agg <- env_agg[order(env_agg$n_height),] #order the dataframe occording to bed height
env_agg$n_height <- NULL
env_agg$Bed <- NULL
total <- merge(total,env_agg,by="Group.1",all=T)
}
# this attaches the stratigraphic data and puts the bed numbers in order
names(total)[names(total) == "Group.1"] <- "bed"
total <- merge(total, bed,by="bed",all=T)
total <- total[order(total$Smid),]
rownames(total) <- total$bed #change the rownames
# Now we have a dataframe with the average values for each bed and NAs where there ar eno values for that bed
# save the dataframe
write.csv(total, "proxies_averages.csv")
library(dplyr)
library(zoo)
library(forcats)
data <- total[,1:19]
data <- data %>%
arrange(fct_relevel(bed, "0","1","1u","2","3","4a","4b","5","6","7","8","9","10","11","12","13a","13b","14","15","16","17","18","19",
"20","21","22","23a","23b","24a","24b","24c","24d","24e","25","26","27a","27b","27c","27d","28","29a","29b","30","31","32",
"33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50+"))
View(data)
#this creates 2-point interpolation for each NA
avg <- data %>%
mutate(X = na.approx(data))
#this creates 2-point interpolation for each NA
avg <- avg %>%
mutate(X = na.approx(data))
#this creates 2-point interpolation for each NA
avg <- data %>%
mutate(X = na.approx(data))
View(data)
data <- total[data <- total[1:62,]
View(data)
View(data)
data <- data[1:62,]
View(data)
#this creates 2-point interpolation for each NA
avg <- data %>%
mutate(X = na.approx(data))
View(data)
View(avg)
avg <- avg[20,]
View(avg)
#this creates 2-point interpolation for each NA
avg <- data %>%
mutate(X = na.approx(data))
avg <- avg[,20]
View(avg)
View(avg)
View(avg)
View(avg)
View(avg)
#subselects the dataframe to the beds of interest
avg <- avg[6:47,]
View(avg)
data <- data %>%
arrange(fct_relevel(bed, "0","1","1u","2","3","4a","4b","5","6","7","8","9","10","11","12","13a","13b","14","15","16","17","18","19",
"20","21","22","23a","23b","24a","24b","24c","24d","24e","25","26","27a","27b","27c","27d","28","29a","29b","30","31","32",
"33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50+"))
data <- total[,1:19]
data <- data %>%
arrange(fct_relevel(bed, "0","1","1u","2","3","4a","4b","5","6","7","8","9","10","11","12","13a","13b","14","15","16","17","18","19",
"20","21","22","23a","23b","24a","24b","24c","24d","24e","25","26","27a","27b","27c","27d","28","29a","29b","30","31","32",
"33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50+"))
data <- data[1:62,]
#this creates 2-point interpolation for each NA
avg <- data %>%
mutate(X = na.approx(data))
View(avg)
avg <- avg[,c(1,20)]
View(avg)
#subselects the dataframe to the beds of interest
avg <- avg[6:47,]
View(avg)
#save the file
write.csv(avg, "proxies_interpolated.csv")
#Read in the geochemical and stratigraphic data
bed <- read.csv("stages_Meishan.csv")
# This creates a list of each raw data file
proxies <- c("Data_R/TOC.csv","Data_R/Th_U.csv", "Data_R/Zn_66.csv", "Data_R/S_33_34.csv", "Data_R/S_33_34.csv","Data_R/Ce_anom.csv", "Data_R/Sr_87.csv",
"Data_R/Os_187.csv", "Data_R/O_18.csv", "Data_R/N_15.csv", "Data_R/Li_7.csv", "Data_R/Hg_TOC.csv", "Data_R/Fe_sp.csv", "Data_R/Fe_sp.csv",
"Data_R/Cd_114.csv", "Data_R/Ca_44.csv", "Data_R/C_org_13.csv", "Data_R/C_carb_13.csv")
# This creates the name of the column of interest for each proxy
pnam <- c("XTOC","XThU", "XZn", "XS33", "XS34", "OCe", "XSr",
"XOs", "XO", "XN", "XLi", "XHg", "XFeHr", "XFePy",
"XCd", "XCa", "XCorg", "Xccarb")
# create a dataframe to save a value for each bed in the section
total <- data.frame("Group.1" = c("0","1","1u","2","3","4a","4b","5","6","7","8","9","10","11","12","13a","13b","14","15","16","17","18","19",
"20","21","22","23a","23b","24a","24b","24c","24d","24e","25","26","27a","27b","27c","27d","28","29a","29b","30","31","32",
"33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50+"))
for (i in 1: length(proxies)){
env <- read.csv(proxies[[i]])
env <- subset(env, select = c("n_height",pnam[[i]])) # subselect the useful columns
#Now add the bed numbers to the dataframe
env$Bed <- 0
for (i in 1: nrow(env)){
height <- env[i,"n_height"]
for (j in 1: nrow(bed)){
bas <- bed[j, "Sbottom"]
top <- bed[j, "Stop"]
if (height >= bas && height <= top){
env[i, "Bed"] <- bed[j, "bed"]
}
}
}
# this averages the values for each bed
env_agg <- aggregate(env, by=list(env$Bed), FUN=mean)
env_agg <- env_agg[order(env_agg$n_height),] #order the dataframe occording to bed height
env_agg$n_height <- NULL
env_agg$Bed <- NULL
total <- merge(total,env_agg,by="Group.1",all=T)
}
# this attaches the stratigraphic data and puts the bed numbers in order
names(total)[names(total) == "Group.1"] <- "bed"
total <- merge(total, bed,by="bed",all=T)
total <- total[order(total$Smid),]
rownames(total) <- total$bed #change the rownames
# Now we have a dataframe with the average values for each bed and NAs where there ar eno values for that bed
# save the dataframe
write.csv(total, "Data_Imputation/proxies_averages.csv")
#Read in the geochemical and stratigraphic data
bed <- read.csv("stages_Meishan.csv")
# This creates a list of each raw data file
proxies <- c("Data_R/TOC.csv","Data_R/Th_U.csv", "Data_R/Zn_66.csv", "Data_R/S_33_34.csv", "Data_R/S_33_34.csv","Data_R/Ce_anom.csv", "Data_R/Sr_87.csv",
"Data_R/Os_187.csv", "Data_R/O_18.csv", "Data_R/N_15.csv", "Data_R/Li_7.csv", "Data_R/Hg_TOC.csv", "Data_R/Fe_sp.csv", "Data_R/Fe_sp.csv",
"Data_R/Cd_114.csv", "Data_R/Ca_44.csv", "Data_R/C_org_13.csv", "Data_R/C_carb_13.csv")
# This creates the name of the column of interest for each proxy
pnam <- c("XTOC","XThU", "XZn", "XS33", "XS34", "OCe", "XSr",
"XOs", "XO", "XN", "XLi", "XHg", "XFeHr", "XFePy",
"XCd", "XCa", "XCorg", "Xccarb")
# create a dataframe to save a value for each bed in the section
total <- data.frame("Group.1" = c("0","1","1u","2","3","4a","4b","5","6","7","8","9","10","11","12","13a","13b","14","15","16","17","18","19",
"20","21","22","23a","23b","24a","24b","24c","24d","24e","25","26","27a","27b","27c","27d","28","29a","29b","30","31","32",
"33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50+"))
for (i in 1: length(proxies)){
env <- read.csv(proxies[[i]])
env <- subset(env, select = c("n_height",pnam[[i]])) # subselect the useful columns
#Now add the bed numbers to the dataframe
env$Bed <- 0
for (i in 1: nrow(env)){
height <- env[i,"n_height"]
for (j in 1: nrow(bed)){
bas <- bed[j, "Sbottom"]
top <- bed[j, "Stop"]
if (height >= bas && height <= top){
env[i, "Bed"] <- bed[j, "bed"]
}
}
}
# this averages the values for each bed
env_agg <- aggregate(env, by=list(env$Bed), FUN=mean)
env_agg <- env_agg[order(env_agg$n_height),] #order the dataframe occording to bed height
env_agg$n_height <- NULL
env_agg$Bed <- NULL
total <- merge(total,env_agg,by="Group.1",all=T)
}
# this attaches the stratigraphic data and puts the bed numbers in order
names(total)[names(total) == "Group.1"] <- "bed"
total <- merge(total, bed,by="bed",all=T)
total <- total[order(total$Smid),]
rownames(total) <- total$bed #change the rownames
# Now we have a dataframe with the average values for each bed and NAs where there ar eno values for that bed
# save the dataframe
write.csv(total, "Data_Imputation/proxies_averages.csv")
# -------------------------------------------------------------------------- #
#
# Imputation using 2 point interpolation
#
# -------------------------------------------------------------------------- #
# This code requires the functions within the dplyr and zoo packages
library(dplyr)
library(zoo)
library(forcats)
data <- total[,1:19]
data <- data %>%
arrange(fct_relevel(bed, "0","1","1u","2","3","4a","4b","5","6","7","8","9","10","11","12","13a","13b","14","15","16","17","18","19",
"20","21","22","23a","23b","24a","24b","24c","24d","24e","25","26","27a","27b","27c","27d","28","29a","29b","30","31","32",
"33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50+"))
data <- data[1:62,]
#this creates 2-point interpolation for each NA
avg <- data %>%
mutate(X = na.approx(data))
avg <- avg[,c(1,20)]
avg <- avg[6:47,] #subselects the dataframe to the beds of interest (beds 4a to 34)
#save the file
write.csv(avg, "Data_Imputation/proxies_interpolated.csv")
imputed_Data <- mice(data, m=5, maxit = 50, method = 'pmm', seed = 500)
# -------------------------------------------------------------------------- #
#
# Imputation using predictive mean maching
#
# -------------------------------------------------------------------------- #
# This code requires the functions within the mice package
library("mice")
imputed_Data <- mice(data, m=5, maxit = 50, method = 'pmm', seed = 500)
imp_env <- complete(imputed_Data,"long")
imp_agg <- aggregate(imp_env, by=list(imp_env$Smid), FUN=mean)
imp_env <- complete(imputed_Data,"long")
View(imp_env)
imp_agg <- aggregate(imp_env, by=list(imp_env$Smid), FUN=mean)
View(imp_env)
imp_agg <- aggregate(imp_env, by=list(imp_env$bed), FUN=mean)
imp_agg$.imp <- NULL
imp_agg$.id <- NULL
imp_agg$Group.1 <- NULL
View(imp_agg)
imputed_Data <- mice(data, m=5, maxit = 50, method = 'pmm', seed = 500)
imp_env <- complete(imputed_Data,"long")
View(imp_env)
imp_agg <- aggregate(imp_env, by=list(imp_env$.id), FUN=mean)
imp_agg$.imp <- NULL
imp_agg$.id <- NULL
imp_agg$Group.1 <- NULL
View(imp_agg)
imputed_Data <- mice(data, m=5, maxit = 50, method = 'pmm', seed = 500)
imp_env <- complete(imputed_Data,"long")
imp_agg <- aggregate(imp_env, by=list(imp_env$.id), FUN=mean)
View(imp_env)
imp_agg$.imp <- NULL
imp_agg$.id <- NULL
imp_agg$Group.1 <- NULL
imp_agg$bed <- data$bed
View(imp_agg)
write.csv(imp_agg, "Data_Imputation/proxies_mice.csv")
# read in the data
com <- read.csv("Data_Imputation/Imputation_comparison.csv")
Cc <- com[com$proxy == "XCcarb",] # subselect the proxy to be plotted
# Plot the data
C <- ggplot(data=Cc, aes(x=n_height, y=value, col=type)) +
geom_point(aes(shape=type, color=type), size=2)+
scale_shape_manual(values=c(15, 17, 21, 18))+
scale_color_manual(values=c('#66CC33','#E69F00', '#56B4E9', "#9900CC"))+
xlab("") + ylab("δ13Ccarb (‰, VPDB)") +
scale_x_reverse(limits = c(773,  -4390)) +
theme_bw() +
theme(legend.position = "none",panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x=element_blank(), axis.text.y = element_text(angle = 90))
# -------------------------------------------------------------------------- #
#
# Version 22/03/2023
#
# -------------------------------------------------------------------------- #
#
# First check your working directory and set your working directory as appropriate
#
# -------------------------------------------------------------------------- #
# This code requires the functions within the ggplot2 and dplyr packages
library(ggplot2)
library(dplyr)
C
# Plot the data
C <- ggplot(data=Cc, aes(x=n_height, y=value, col=type)) +
geom_point(aes(shape=type, color=type), size=2)+
scale_shape_manual(values=c(15, 17, 21, 18))+
scale_color_manual(values=c('#66CC33','#E69F00', '#56B4E9', "#9900CC"))+
xlab("") + ylab("δ13Ccarb (‰, VPDB)") +
scale_x_reverse(limits = c(773,  -4390)) +
theme_bw() +
theme(legend.position = "none",panel.grid.major = element_blank(), panel.grid.minor = element_blank(), axis.text.x=element_blank(), axis.text.y = element_text(angle = 90))
C
bed <- read.csv("stages_Meishan.csv")
# This creates a list of each raw data file
proxies <- c("Data_R/TOC.csv","Data_R/Th_U.csv", "Data_R/Zn_66.csv", "Data_R/S_33_34.csv", "Data_R/S_33_34.csv","Data_R/Ce_anom.csv", "Data_R/Sr_87.csv",
"Data_R/Os_187.csv", "Data_R/O_18.csv", "Data_R/N_15.csv", "Data_R/Li_7.csv", "Data_R/Hg_TOC.csv", "Data_R/Fe_sp.csv", "Data_R/Fe_sp.csv",
"Data_R/Cd_114.csv", "Data_R/Ca_44.csv", "Data_R/C_org_13.csv", "Data_R/C_carb_13.csv", "Data_R/Th_U.csv", "Data_R/Zn_66.csv", "Data_R/Ce_anom.csv")
# This creates the name of the column of interest for each proxy
pnam <- c("XTOC","XThU", "XZn", "XS33", "XS34", "OCe", "XSr",
"XOs", "XO", "XN", "XLi", "XHg", "XFeHr", "XFePy",
"XCd", "XCa", "XCorg", "Xccarb", "ThU", "XZn", "OCe")
# create a dataframe to save a value for each bed in the section
total <- data.frame("Group.1" = c("0","1","1u","2","3","4a","4b","5","6","7","8","9","10","11","12","13a","13b","14","15","16","17","18","19",
"20","21","22","23a","23b","24a","24b","24c","24d","24e","25","26","27a","27b","27c","27d","28","29a","29b","30","31","32",
"33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50+"))
for (i in 1: length(proxies)){
env <- read.csv(proxies[[i]])
env <- subset(env, select = c("n_height",pnam[[i]])) # subselect the useful columns
#Now add the bed numbers to the dataframe
env$Bed <- 0
for (i in 1: nrow(env)){
height <- env[i,"n_height"]
for (j in 1: nrow(bed)){
bas <- bed[j, "Sbottom"]
top <- bed[j, "Stop"]
if (height >= bas && height <= top){
env[i, "Bed"] <- bed[j, "bed"]
}
}
}
# this averages the values for each bed
env_agg <- aggregate(env, by=list(env$Bed), FUN=mean)
env_agg <- env_agg[order(env_agg$n_height),] #order the dataframe occording to bed height
env_agg$n_height <- NULL
env_agg$Bed <- NULL
total <- merge(total,env_agg,by="Group.1",all=T)
}
bed <- read.csv("stages_Meishan.csv")
# This creates a list of each raw data file
proxies <- c("Data_R/TOC.csv","Data_R/Th_U.csv", "Data_R/Zn_66.csv", "Data_R/S_33_34.csv", "Data_R/S_33_34.csv","Data_R/Ce_anom.csv", "Data_R/Sr_87.csv",
"Data_R/Os_187.csv", "Data_R/O_18.csv", "Data_R/N_15.csv", "Data_R/Li_7.csv", "Data_R/Hg_TOC.csv", "Data_R/Fe_sp.csv", "Data_R/Fe_sp.csv",
"Data_R/Cd_114.csv", "Data_R/Ca_44.csv", "Data_R/C_org_13.csv", "Data_R/C_carb_13.csv", "Data_R/Th_U.csv", "Data_R/Zn_66.csv", "Data_R/Ce_anom.csv")
# This creates the name of the column of interest for each proxy
pnam <- c("XTOC","XThU", "XZn", "XS33", "XS34", "OCe", "XSr",
"XOs", "XO", "XN", "XLi", "XHg", "XFeHr", "XFePy",
"XCd", "XCa", "XCorg", "Xccarb", "XThU", "XZn", "OCe")
# create a dataframe to save a value for each bed in the section
total <- data.frame("Group.1" = c("0","1","1u","2","3","4a","4b","5","6","7","8","9","10","11","12","13a","13b","14","15","16","17","18","19",
"20","21","22","23a","23b","24a","24b","24c","24d","24e","25","26","27a","27b","27c","27d","28","29a","29b","30","31","32",
"33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50+"))
for (i in 1: length(proxies)){
env <- read.csv(proxies[[i]])
env <- subset(env, select = c("n_height",pnam[[i]])) # subselect the useful columns
#Now add the bed numbers to the dataframe
env$Bed <- 0
for (i in 1: nrow(env)){
height <- env[i,"n_height"]
for (j in 1: nrow(bed)){
bas <- bed[j, "Sbottom"]
top <- bed[j, "Stop"]
if (height >= bas && height <= top){
env[i, "Bed"] <- bed[j, "bed"]
}
}
}
# this averages the values for each bed
env_agg <- aggregate(env, by=list(env$Bed), FUN=mean)
env_agg <- env_agg[order(env_agg$n_height),] #order the dataframe occording to bed height
env_agg$n_height <- NULL
env_agg$Bed <- NULL
total <- merge(total,env_agg,by="Group.1",all=T)
}
# this attaches the stratigraphic data and puts the bed numbers in order
names(total)[names(total) == "Group.1"] <- "bed"
total <- merge(total, bed,by="bed",all=T)
total <- total[order(total$Smid),]
rownames(total) <- total$bed #change the rownames
# Now we have a dataframe with the average values for each bed and NAs where there ar eno values for that bed
# save the results
write.csv(total, "Data_Imputation/proxies_averages.csv")
bed <- read.csv("stages_Meishan.csv")
# This creates a list of each raw data file
proxies <- c("Data_R/TOC.csv","Data_R/Th_U.csv", "Data_R/Zn_66.csv", "Data_R/S_33_34.csv", "Data_R/S_33_34.csv","Data_R/Ce_anom.csv", "Data_R/Sr_87.csv",
"Data_R/Os_187.csv", "Data_R/O_18.csv", "Data_R/N_15.csv", "Data_R/Li_7.csv", "Data_R/Hg_TOC.csv", "Data_R/Fe_sp.csv", "Data_R/Fe_sp.csv",
"Data_R/Cd_114.csv", "Data_R/Ca_44.csv", "Data_R/C_org_13.csv", "Data_R/C_carb_13.csv")
# This creates the name of the column of interest for each proxy
pnam <- c("XTOC","XThU", "XZn", "XS33", "XS34", "OCe", "XSr",
"XOs", "XO", "XN", "XLi", "XHg", "XFeHr", "XFePy",
"XCd", "XCa", "XCorg", "Xccarb")
# create a dataframe to save a value for each bed in the section
total <- data.frame("Group.1" = c("0","1","1u","2","3","4a","4b","5","6","7","8","9","10","11","12","13a","13b","14","15","16","17","18","19",
"20","21","22","23a","23b","24a","24b","24c","24d","24e","25","26","27a","27b","27c","27d","28","29a","29b","30","31","32",
"33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50+"))
for (i in 1: length(proxies)){
env <- read.csv(proxies[[i]])
env <- subset(env, select = c("n_height",pnam[[i]])) # subselect the useful columns
#Now add the bed numbers to the dataframe
env$Bed <- 0
for (i in 1: nrow(env)){
height <- env[i,"n_height"]
for (j in 1: nrow(bed)){
bas <- bed[j, "Sbottom"]
top <- bed[j, "Stop"]
if (height >= bas && height <= top){
env[i, "Bed"] <- bed[j, "bed"]
}
}
}
# this averages the values for each bed
env_agg <- aggregate(env, by=list(env$Bed), FUN=mean)
env_agg <- env_agg[order(env_agg$n_height),] #order the dataframe occording to bed height
env_agg$n_height <- NULL
env_agg$Bed <- NULL
total <- merge(total,env_agg,by="Group.1",all=T)
}
# this attaches the stratigraphic data and puts the bed numbers in order
names(total)[names(total) == "Group.1"] <- "bed"
total <- merge(total, bed,by="bed",all=T)
total <- total[order(total$Smid),]
rownames(total) <- total$bed #change the rownames
# Now we have a dataframe with the average values for each bed and NAs where there ar eno values for that bed
# save the results
write.csv(total, "Data_Imputation/proxies_averages.csv")
